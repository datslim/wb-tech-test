services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: wb-api
    environment:
      DATABASE_URL: ${DATABASE_URL}
      PG_USER: ${PG_USER}
      PG_PASS: ${PG_PASS}
      PG_HOST: ${PG_HOST}
      PG_PORT: ${PG_PORT}
      PG_DB: ${PG_DB}
      PORT: ${API_PORT}
    depends_on:
      - postgres
    ports:
      - ${API_PORT}:${API_PORT}
  webserver:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: wb-webserver
    environment:
      PORT: ${STATIC_PORT}
    ports:
      - ${STATIC_PORT}:${STATIC_PORT}
  postgres:
    image: postgres:15
    container_name: wb-postgres
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASS}
      POSTGRES_DB: ${PG_DB}
    ports:
      - ${PG_PORT}:${PG_PORT}
    volumes:
      - pgdata:/var/lib/postgresql/data

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: wb-zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    image: bitnami/kafka:latest
    container_name: wb-kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: wb-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://wb-kafka:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  pgadmin:
    image: dpage/pgadmin4
    container_name: wb-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_ADMIN_PASS}
    ports:
      - ${PG_ADMIN_PORT}:80

volumes:
  pgdata: